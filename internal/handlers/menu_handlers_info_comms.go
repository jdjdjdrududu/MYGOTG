package handlers

import (
	// "database/sql" // Not used directly here, but might be needed for others
	"fmt"
	tgbotapi "github.com/OvyFlash/telegram-bot-api"
	"log"
	"time" // Added for Point 1 fix

	// "github.com/xuri/excelize/v2" // For Excel generation, not needed here

	"Original/internal/constants"
	"Original/internal/db"
	"Original/internal/models"
	// "Original/internal/session" // Access via bh.Deps
	"Original/internal/utils"
)

// --- –ú–µ–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏ —Å–≤—è–∑–∏ ---
// --- Contact and Communication Menus ---

// SendContactOperatorMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.
// SendContactOperatorMenu sends the menu for choosing how to contact the operator.
func (bh *BotHandler) SendContactOperatorMenu(chatID int64, user models.User, messageIDToEdit int) {
	log.Printf("BotHandler.SendContactOperatorMenu –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_CONTACT_METHOD)

	msgText := "üìû –ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º? –ú—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏! üòä\n\n" +
		"üí° –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –∑–≤–æ–Ω–æ–∫ –¥–ª—è –ª–∏—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏!"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí¨ –°–≤—è–∑—å –≤ —á–∞—Ç–µ", "contact_chat"),
			tgbotapi.NewInlineKeyboardButtonData("üì± –°–≤—è–∑—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É", "contact_phone_options"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendContactOperatorMenu: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendPhoneOptionsMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É (–ø–æ–∑–≤–æ–Ω–∏—Ç—å –º–Ω–µ / —Å–∞–º –ø–æ–∑–≤–æ–Ω—é).
// SendPhoneOptionsMenu sends the menu for phone action selection (call me / I'll call).
func (bh *BotHandler) SendPhoneOptionsMenu(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendPhoneOptionsMenu –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_PHONE_OPTIONS) // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω—é / New state for this menu

	msgText := "üì± –ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º?\n\n" +
		"üí° –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –∑–≤–æ–Ω–æ–∫, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –∑–∞ 5 –º–∏–Ω—É—Ç! üòä\n"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì≤ –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ", "phone_action_request_call"),
			tgbotapi.NewInlineKeyboardButtonData("‚òéÔ∏è –°–∞–º –ø–æ–∑–≤–æ–Ω—é", "phone_action_call_self"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Å–≤—è–∑–∏", "contact_operator"),
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendPhoneOptionsMenu: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendRequestPhoneNumberPrompt –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞.
// SendRequestPhoneNumberPrompt prompts the user for their phone number for a callback.
func (bh *BotHandler) SendRequestPhoneNumberPrompt(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendRequestPhoneNumberPrompt –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_PHONE_AWAIT_INPUT) // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ / Awaiting number input

	msgText := "üì± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79991234567, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å:\n\n" +
		"üí° –ò–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏."

	// ReplyKeyboard –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º" / ReplyKeyboard for "Share contact" button
	replyKeyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButtonContact("üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–∏–º –Ω–æ–º–µ—Ä–æ–º –∏–∑ Telegram"),
		),
	)
	replyKeyboard.OneTimeKeyboard = true
	replyKeyboard.ResizeKeyboard = true

	// InlineKeyboard –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ù–∞–∑–∞–¥" / InlineKeyboard for "Back" buttons
	inlineKeyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –æ–ø—Ü–∏—è–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "contact_phone_options"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)

	// –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º/—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
	// First, send/edit message with inline keyboard
	sentInlineMsg, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &inlineKeyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendRequestPhoneNumberPrompt: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è chatID %d: %v", chatID, err)
		return
	}

	// –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ReplyKeyboard (–µ—Å–ª–∏ –æ–Ω–æ –µ—â–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
	// Then send message with ReplyKeyboard (if not already displayed)
	tempMsgConfig := tgbotapi.NewMessage(chatID, "–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá")
	tempMsgConfig.ReplyMarkup = replyKeyboard

	sentReplyMsg, errKb := bh.Deps.BotClient.Send(tempMsgConfig)
	if errKb != nil {
		log.Printf("SendRequestPhoneNumberPrompt: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ReplyKeyboard –¥–ª—è chatID %d: %v", chatID, errKb)
	} else {
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å ReplyKeyboard, —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ —É–¥–∞–ª–∏—Ç—å
		// Save ID of message with ReplyKeyboard to delete it later
		tempData := bh.Deps.SessionManager.GetTempOrder(chatID)
		tempData.LocationPromptMessageID = sentReplyMsg.MessageID // –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º —ç—Ç–æ –ø–æ–ª–µ / Reuse this field
		tempData.CurrentMessageID = sentInlineMsg.MessageID       // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ CurrentMessageID - —ç—Ç–æ –∏–Ω–ª–∞–π–Ω / Ensure CurrentMessageID is inline
		bh.Deps.SessionManager.UpdateTempOrder(chatID, tempData)
	}
}

// SendOperatorContactInfo –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.
// SendOperatorContactInfo sends operator contact information to the user.
func (bh *BotHandler) SendOperatorContactInfo(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendOperatorContactInfo –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_IDLE) // –ü–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è / After showing contacts, state is reset

	// --- MODIFICATION FOR POINT 1 ---
	// Ensure ReplyKeyboard is removed if it was present (e.g., from "–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ")
	tempData := bh.Deps.SessionManager.GetTempOrder(chatID)
	if tempData.LocationPromptMessageID != 0 { // LocationPromptMessageID might have been used for phone prompt message
		bh.deleteMessageHelper(chatID, tempData.LocationPromptMessageID)
		tempData.LocationPromptMessageID = 0
		// No need to update session just for this, as state is reset anyway.
		// If other fields were modified in tempData, then update.
	}
	// Send a message with ReplyKeyboardRemove to be sure.
	// This message can be very short-lived.
	replyMarkupRemove := tgbotapi.NewRemoveKeyboard(true)
	msgToRemoveKb := tgbotapi.NewMessage(chatID, constants.InvisibleMessage) // "‚å®Ô∏è" or similar
	msgToRemoveKb.ReplyMarkup = replyMarkupRemove

	// Send and schedule deletion of the invisible message
	if sentKbRemovalMsg, errKb := bh.Deps.BotClient.Send(msgToRemoveKb); errKb == nil {
		go func(id int) {
			time.Sleep(200 * time.Millisecond) // Brief delay
			bh.deleteMessageHelper(chatID, id)
		}(sentKbRemovalMsg.MessageID)
	} else {
		log.Printf("SendOperatorContactInfo: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–±—Ä–∞—Ç—å ReplyKeyboard: %v", errKb)
	}
	// --- END MODIFICATION FOR POINT 1 ---

	operatorName, operatorPhone, err := db.GetOperatorForContact()
	if err != nil {
		_, _ = bh.sendErrorMessageHelper(chatID, messageIDToEdit, "üìû –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç.")
		return
	}

	formattedPhone := utils.FormatPhoneNumber(operatorPhone)
	msgText := fmt.Sprintf(
		"üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º:\n\nüë®‚Äçüíº %s\nüì± %s\n\n–ó–≤–æ–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∏ –º—ã —Ä–µ—à–∏–º –≤–∞—à –≤–æ–ø—Ä–æ—Å –∑–∞ 5 –º–∏–Ω—É—Ç! üòä\nüî• –¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è: –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 200 ‚ÇΩ –Ω–∞ –∑–∞–∫–∞–∑ –ø–æ—Å–ª–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞! üéÅ",
		utils.EscapeTelegramMarkdown(operatorName), utils.EscapeTelegramMarkdown(formattedPhone))
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –æ–ø—Ü–∏—è–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "contact_phone_options"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, errSend := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if errSend != nil {
		log.Printf("SendOperatorContactInfo: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, errSend)
	}
}

// SendChatMessageInputPrompt –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.
// SendChatMessageInputPrompt prompts the user to enter a message for the chat with the operator.
func (bh *BotHandler) SendChatMessageInputPrompt(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendChatMessageInputPrompt –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_CHAT_MESSAGE_INPUT)

	msgText := "üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É:\n\nüî• –ü–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç! üòä"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Å–≤—è–∑–∏", "contact_operator"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendChatMessageInputPrompt: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendChatConfirmation –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç.
// SendChatConfirmation sends confirmation after sending a message to the chat.
func (bh *BotHandler) SendChatConfirmation(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendChatConfirmation –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_IDLE) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ / Reset state after sending

	msgText := "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë? üòä\nüî• –ü–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç –∏ –±–æ–Ω—É—Å 200 ‚ÇΩ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! üéÅ"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë", "contact_chat"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendChatConfirmation: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendPhoneCallRequestConfirmation –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫.
// SendPhoneCallRequestConfirmation confirms a callback request.
func (bh *BotHandler) SendPhoneCallRequestConfirmation(chatID int64, formattedPhone string, messageIDToEdit int) {
	log.Printf("BotHandler.SendPhoneCallRequestConfirmation –¥–ª—è chatID %d, —Ç–µ–ª–µ—Ñ–æ–Ω: %s, messageIDToEdit: %d", chatID, formattedPhone, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_IDLE)

	// –£–±–∏—Ä–∞–µ–º ReplyKeyboard, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ / Remove ReplyKeyboard if it was present
	tempData := bh.Deps.SessionManager.GetTempOrder(chatID)
	if tempData.LocationPromptMessageID != 0 { // LocationPromptMessageID –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å ReplyKeyboard / LocationPromptMessageID is used to store ID of message with ReplyKeyboard
		bh.deleteMessageHelper(chatID, tempData.LocationPromptMessageID)
		tempData.LocationPromptMessageID = 0
		bh.Deps.SessionManager.UpdateTempOrder(chatID, tempData)
	}
	// –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞–ø—Ä—è–º—É—é / Can also send command to remove keyboard directly
	replyMarkup := tgbotapi.NewRemoveKeyboard(true)
	msgToRemoveKb := tgbotapi.NewMessage(chatID, constants.InvisibleMessage) // –ò—Å–ø–æ–ª—å–∑—É–µ–º "–Ω–µ–≤–∏–¥–∏–º–æ–µ" —Å–æ–æ–±—â–µ–Ω–∏–µ / Use "invisible" message
	msgToRemoveKb.ReplyMarkup = replyMarkup
	if sentKbRemovalMsg, errKb := bh.Deps.BotClient.Send(msgToRemoveKb); errKb == nil {
		go func(id int) {
			time.Sleep(200 * time.Millisecond)
			bh.deleteMessageHelper(chatID, id)
		}(sentKbRemovalMsg.MessageID)
	} else {
		log.Printf("SendPhoneCallRequestConfirmation: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ReplyKeyboard: %v", errKb)
	}

	msgText := fmt.Sprintf(
		"üìû –°–ø–∞—Å–∏–±–æ! –ú—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤–∞–º –Ω–∞ –Ω–æ–º–µ—Ä %s –≤ –±–ª–∏–∂–∞–π—à–∏–µ 5 –º–∏–Ω—É—Ç! üòä\nüî• –ü–æ–∫–∞ –∂–¥—ë—Ç–µ, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å 500 ‚ÇΩ! üéÅ",
		utils.EscapeTelegramMarkdown(formattedPhone))
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", "invite_friend"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendPhoneCallRequestConfirmation: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendClientChatsMenu (–¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.
// SendClientChatsMenu (for operator) displays a list of active chats with clients.
func (bh *BotHandler) SendClientChatsMenu(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendClientChatsMenu –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_OPERATOR_VIEW_CHATS)

	activeChats, err := db.GetActiveClientChats()
	if err != nil {
		log.Printf("SendClientChatsMenu: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: %v", err)
		_, _ = bh.sendErrorMessageHelper(chatID, messageIDToEdit, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤.")
		return
	}

	var msgText string
	var keyboard tgbotapi.InlineKeyboardMarkup
	var rows [][]tgbotapi.InlineKeyboardButton

	if len(activeChats) == 0 {
		msgText = "üí¨ –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –ø–æ–∫–∞ –Ω–µ—Ç."
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main")))
	} else {
		msgText = "üí¨ –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏:\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —á–∞—Ç, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å."
		for _, clientUser := range activeChats {
			name := utils.GetUserDisplayName(clientUser)
			if len(name) > 50 {
				name = name[:47] + "..."
			}
			// –ö–æ–ª–ª–±—ç–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
			// Callback should contain client ID to open chat
			rows = append(rows, tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData(name, fmt.Sprintf("view_chat_history_%d", clientUser.ChatID)),
			))
		}
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main")))
	}
	keyboard.InlineKeyboard = rows

	_, errSend := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if errSend != nil {
		log.Printf("SendClientChatsMenu: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è chatID %d: %v", chatID, errSend)
	}
}

// --- –ú–µ–Ω—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã ---
// --- Referral Program Menus ---

// SendInviteFriendMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞".
// SendInviteFriendMenu sends the "Invite a Friend" menu.
func (bh *BotHandler) SendInviteFriendMenu(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendInviteFriendMenu –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_INVITE_FRIEND)

	msgText := "üë• –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ 500 ‚ÇΩ –∑–∞ –∫–∞–∂–¥—ã–π –∏—Ö –∑–∞–∫–∞–∑ –æ—Ç 10 000 ‚ÇΩ!\n\n" +
		"üî• –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π:"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì± –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", "referral_link"),
			tgbotapi.NewInlineKeyboardButtonData("üî≤ QR-–∫–æ–¥", "referral_qr"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë• –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", "referral_my"),
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendInviteFriendMenu: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendReferralLink –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
// SendReferralLink sends a referral link to the user.
func (bh *BotHandler) SendReferralLink(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendReferralLink –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_REFERRAL_LINK)

	link, err := utils.GenerateReferralLink(bh.Deps.Config.BotUsername, chatID)
	if err != nil {
		log.Printf("SendReferralLink: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è chatID %d: %v", chatID, err)
		_, _ = bh.sendErrorMessageHelper(chatID, messageIDToEdit, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		return
	}
	// –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –ø–æ –∫–ª–∏–∫—É
	// Use Markdown for click-to-copy link functionality
	msgText := fmt.Sprintf("üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n`%s`\n\n–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å—ã! üéâ", link) // –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω—É–∂–Ω–æ –¥–ª—è `...` / Escaping not needed for `...`
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üî≤ –ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥", "referral_qr"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞'", "invite_friend"),
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, errSend := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if errSend != nil {
		log.Printf("SendReferralLink: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, errSend)
	}
}

// SendReferralQRCode –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç QR-–∫–æ–¥ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π.
// SendReferralQRCode sends a QR code with the referral link.
func (bh *BotHandler) SendReferralQRCode(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendReferralQRCode –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_REFERRAL_QR)

	qrCodeBytes, err := utils.GenerateQRCode(bh.Deps.Config.BotUsername, chatID)
	if err != nil {
		log.Printf("SendReferralQRCode: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞ –¥–ª—è chatID %d: %v", chatID, err)
		_, _ = bh.sendErrorMessageHelper(chatID, messageIDToEdit, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è QR-–∫–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		return
	}

	// –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Å—Å—ã–ª–∫–æ–π –∏–ª–∏ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞), –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –∏ —ç—Ç–æ –Ω–µ –æ–Ω–æ –∂–µ
	// Delete previous message (e.g., with text link or selection menu) if it existed and is not the same
	if messageIDToEdit != 0 {
		bh.deleteMessageHelper(chatID, messageIDToEdit)
	}

	photoFileBytes := tgbotapi.FileBytes{
		Name:  "referral_qr.png",
		Bytes: qrCodeBytes,
	}
	photoMsg := tgbotapi.NewPhoto(chatID, photoFileBytes)
	photoMsg.Caption = "üî≤ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π QR-–∫–æ–¥.\n–ü–æ–∫–∞–∂–∏—Ç–µ –µ–≥–æ –¥—Ä—É–∑—å—è–º –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!\n–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –±–æ–Ω—É—Å—ã! üéâ"
	photoMsg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì± –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É", "referral_link"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞'", "invite_friend"),
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)

	sentMsg, errSend := bh.Deps.BotClient.Send(photoMsg) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ / Send new message with photo
	if errSend != nil {
		log.Printf("SendReferralQRCode: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ QR-–∫–æ–¥–∞ –¥–ª—è chatID %d: %v", chatID, errSend)
		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, —Ç–∞–∫ –∫–∞–∫ messageIDToEdit –º–æ–≥ –±—ã—Ç—å —É–¥–∞–ª–µ–Ω
		// Send new error message as messageIDToEdit might have been deleted
		bh.sendErrorMessageHelper(chatID, 0, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å QR-–∫–æ–¥.")
		return
	}
	// –û–±–Ω–æ–≤–ª—è–µ–º CurrentMessageID –≤ —Å–µ—Å—Å–∏–∏ –Ω–∞ ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
	// Update CurrentMessageID in session to the ID of the sent photo
	orderData := bh.Deps.SessionManager.GetTempOrder(chatID)
	orderData.CurrentMessageID = sentMsg.MessageID
	orderData.MediaMessageIDs = []int{sentMsg.MessageID} // –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å –≥–ª–∞–≤–Ω–æ–µ / This message is now the main one
	orderData.MediaMessageIDsMap = make(map[string]bool) // –û—á–∏—â–∞–µ–º –∫–∞—Ä—Ç—É / Clear map
	orderData.MediaMessageIDsMap[fmt.Sprintf("%d", sentMsg.MessageID)] = true
	bh.Deps.SessionManager.UpdateTempOrder(chatID, orderData)
}

// SendMyReferralsMenu –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å—É–º–º—É –±–æ–Ω—É—Å–æ–≤.
// SendMyReferralsMenu displays a list of invited users and bonus amounts.
func (bh *BotHandler) SendMyReferralsMenu(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendMyReferralsMenu –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_MY_REFERRALS)

	referrals, err := db.GetReferralsByInviterChatID(chatID)
	if err != nil {
		log.Printf("SendMyReferralsMenu: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è chatID %d: %v", chatID, err)
		_, _ = bh.sendErrorMessageHelper(chatID, messageIDToEdit, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.")
		return
	}

	var msgText string
	var keyboard tgbotapi.InlineKeyboardMarkup
	var rows [][]tgbotapi.InlineKeyboardButton

	if len(referrals) == 0 {
		msgText = "üë• –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞–ª–∏ –∑–∞–∫–∞–∑ –∏ –ø—Ä–∏–Ω–µ—Å–ª–∏ –≤–∞–º –±–æ–Ω—É—Å.\n\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥–µ–ª–∏—Ç—å—Å—è –≤–∞—à–µ–π —Å—Å—ã–ª–∫–æ–π!"
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", "referral_link")))
	} else {
		msgText = "üë• –í–∞—à–∏ —É—Å–ø–µ—à–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã (–¥—Ä—É–∑—å—è, —Å–¥–µ–ª–∞–≤—à–∏–µ –∑–∞–∫–∞–∑ –∏ –ø—Ä–∏–Ω–µ—Å—à–∏–µ –±–æ–Ω—É—Å):\n"
		totalBonus := 0.0
		unpaidBonus := 0.0
		hasUnpaidAndNotRequested := false // –§–ª–∞–≥ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫ –∑–∞–ø—Ä–æ—Å—É –±–æ–Ω—É—Å–æ–≤ / Flag for bonuses available for request
		for _, r := range referrals {
			dateStr := r.CreatedAt.Format("02.01.2006")
			statusStr := ""
			if r.PaidOut {
				statusStr = " (–≤—ã–ø–ª–∞—á–µ–Ω–æ)"
			} else {
				if r.PayoutRequestID.Valid {
					statusStr = " (–≤ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É)"
				} else {
					unpaidBonus += r.Amount // –°—É–º–º–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –Ω–µ –≤—ã–ø–ª–∞—á–µ–Ω—ã –∏ –Ω–µ –≤ –∑–∞–ø—Ä–æ—Å–µ / Sum only those not paid and not in request
					hasUnpaidAndNotRequested = true
				}
			}
			// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–º—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ (r.Name —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –§–ò–û) / Display invitee's name (r.Name already contains full name)
			// POINT 10: Format bonus amount
			rows = append(rows, tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData(fmt.Sprintf("%s (%s) - –ë–æ–Ω—É—Å: %.0f ‚ÇΩ%s", r.Name, dateStr, r.Amount, statusStr), fmt.Sprintf("referral_details_%d", r.ID)),
			))
			totalBonus += r.Amount // –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å / Total earned bonus
		}
		// POINT 10: Format total and unpaid bonus amounts
		msgText += fmt.Sprintf("\n–û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å: *%.0f ‚ÇΩ*", totalBonus)
		if hasUnpaidAndNotRequested && unpaidBonus > 0 {
			msgText += fmt.Sprintf("\n–ö –≤—ã–ø–ª–∞—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ: *%.0f ‚ÇΩ*", unpaidBonus)
			rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üí∏ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤", "request_referral_payout")))
		} else if totalBonus > 0 {
			msgText += "\n–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–Ω—É—Å—ã –≤—ã–ø–ª–∞—á–µ–Ω—ã –∏–ª–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ."
		}
	}

	rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞'", "invite_friend")))
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main")))
	keyboard.InlineKeyboard = rows

	_, errSend := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if errSend != nil {
		log.Printf("SendMyReferralsMenu: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, errSend)
	}
}

// SendReferralPayoutConfirmation –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–ø–ª–∞—Ç—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤.
// –î–æ–±–∞–≤–ª–µ–Ω requestID –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
// SendReferralPayoutConfirmation confirms a referral bonus payout request.
// requestID added for information.
func (bh *BotHandler) SendReferralPayoutConfirmation(chatID int64, messageIDToEdit int, amount float64, requestID int64) {
	log.Printf("BotHandler.SendReferralPayoutConfirmation –¥–ª—è chatID %d, —Å—É–º–º–∞ %.0f, ID –∑–∞–ø—Ä–æ—Å–∞ %d, messageIDToEdit: %d", chatID, amount, requestID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_IDLE) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ / Reset state

	// POINT 10: Format amount
	msgText := fmt.Sprintf("üí∏ –í–∞—à –∑–∞–ø—Ä–æ—Å ‚Ññ%d –Ω–∞ –≤—ã–ø–ª–∞—Ç—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤ –Ω–∞ —Å—É–º–º—É %.0f ‚ÇΩ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!\n\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –≤—ã–ø–ª–∞—Ç—ã. –°–ø–∞—Å–∏–±–æ!", requestID, amount)
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üë• –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", "referral_my")), // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ / Button to return to referral list
		tgbotapi.NewInlineKeyboardRow(tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main")),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendReferralPayoutConfirmation: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// --- –ü—Ä–æ—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ---
// --- Other informational messages ---

// SendMaterialsSoonInfo —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ —Ä–∞–∑–¥–µ–ª —Å—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.
// SendMaterialsSoonInfo informs that the construction materials section will be available soon.
func (bh *BotHandler) SendMaterialsSoonInfo(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendMaterialsSoonInfo –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)
	// –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–∂–Ω–æ –Ω–µ –º–µ–Ω—è—Ç—å –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, STATE_INFO_VIEW
	// State can remain unchanged or set to specific, e.g., STATE_INFO_VIEW
	// bh.Deps.SessionManager.SetState(chatID, constants.STATE_INFO_MATERIALS)

	msgText := "üß± –†–∞–∑–¥–µ–ª '–°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã' —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω! üöõ\n\n" +
		"üî• –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 500 ‚ÇΩ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤! üéÅ"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "subscribe_materials_updates"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendMaterialsSoonInfo: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendSubscriptionConfirmation –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
// SendSubscriptionConfirmation confirms subscription to notifications.
func (bh *BotHandler) SendSubscriptionConfirmation(chatID int64, serviceName string, messageIDToEdit int) {
	log.Printf("BotHandler.SendSubscriptionConfirmation –¥–ª—è chatID %d, —Å–µ—Ä–≤–∏—Å: %s, messageIDToEdit: %d", chatID, serviceName, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_IDLE) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ / Reset state

	msgText := fmt.Sprintf("üîî –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ '%s'!\n\n"+
		"üî• –ú—ã —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤–æ—Å—Ç–∏ –∏–ª–∏ —Ä–∞–∑–¥–µ–ª —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω. –í—ã —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç–µ –æ–±–µ—â–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å! üéÅ", serviceName)
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendSubscriptionConfirmation: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendReferralDetails –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.
// SendReferralDetails displays details of a specific referral.
func (bh *BotHandler) SendReferralDetails(chatID int64, referralID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendReferralDetails –¥–ª—è chatID %d, referralID: %d, messageIDToEdit: %d", chatID, referralID, messageIDToEdit)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_MY_REFERRALS) // –û—Å—Ç–∞–µ–º—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ "–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã" / Remain in "My Referrals" context

	referral, err := db.GetReferralByID(referralID, chatID) // chatID –∑–¥–µ—Å—å - —ç—Ç–æ chatID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É / chatID here is the chatID of the user who pressed the button
	if err != nil {
		log.Printf("SendReferralDetails: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞ #%d –¥–ª—è chatID %d: %v", referralID, chatID, err)
		_, _ = bh.sendErrorMessageHelper(chatID, messageIDToEdit, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
		bh.SendMyReferralsMenu(chatID, messageIDToEdit) // –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é "–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã" / Return to "My Referrals" menu
		return
	}

	statusText := "–û–∂–∏–¥–∞–µ—Ç –≤—ã–ø–ª–∞—Ç—ã"
	if referral.PaidOut {
		statusText = "–í—ã–ø–ª–∞—á–µ–Ω–æ"
	} else if referral.PayoutRequestID.Valid { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ ID –∑–∞–ø—Ä–æ—Å–∞ / Check if request ID exists
		statusText = "–í –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É"
	}

	// POINT 10: Format bonus amount
	msgText := fmt.Sprintf(
		"üë• –î–µ—Ç–∞–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—É:\n\n"+
			"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π: *%s*\n"+
			"–°—É–º–º–∞ –±–æ–Ω—É—Å–∞: *%.0f ‚ÇΩ*\n"+
			"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: *%s*\n"+
			"ID –ó–∞–∫–∞–∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: *%d*\n"+
			"–°—Ç–∞—Ç—É—Å –≤—ã–ø–ª–∞—Ç—ã: *%s*",
		utils.EscapeTelegramMarkdown(referral.Name),
		referral.Amount,
		utils.EscapeTelegramMarkdown(referral.CreatedAt.Format("02.01.2006")),
		referral.OrderID,
		utils.EscapeTelegramMarkdown(statusText),
	)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ö —Å–ø–∏—Å–∫—É –º–æ–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤", "referral_my"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main"),
		),
	)

	_, err = bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, tgbotapi.ModeMarkdown)
	if err != nil {
		log.Printf("SendReferralDetails: –û—à–∏–±–∫–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}
