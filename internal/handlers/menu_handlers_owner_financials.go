package handlers

import (
	"Original/internal/constants"
	"Original/internal/db"
	"Original/internal/models"
	"Original/internal/session"
	"Original/internal/utils"
	"database/sql"
	"fmt"
	"log"
	"strconv"
	"strings"
	"time"

	tgbotapi "github.com/OvyFlash/telegram-bot-api"
)

// SendOwnerFinancialsMainMenu - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é "–î–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞" –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–°–¢–ê–†–ê–Ø –í–ï–†–°–ò–Ø - –ü–û –î–ê–¢–ê–ú)
// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ DEPRECATED –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∞, –µ—Å–ª–∏ –Ω–æ–≤—ã–π —Ñ–ª–æ—É –µ–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ—Ç.
// –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∏–ª–∏ –µ—Å–ª–∏ —Å—Ç–∞—Ä—ã–π —Ñ–ª–æ—É –µ—â–µ –≥–¥–µ-—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.
func (bh *BotHandler) SendOwnerFinancialsMainMenu(chatID int64, user models.User, messageIDToEdit int) {
	log.Printf("SendOwnerFinancialsMainMenu (DEPRECATED): –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ ChatID=%d", chatID)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_OWNER_FINANCIAL_MAIN) // –°—Ç–∞—Ä–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–æ–≤–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–Ω–µ–∂–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏
	bh.SendOwnerCashManagementMenu(chatID, user, messageIDToEdit)
}

// SendOwnerFinancialsForDate - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—É–º–º—ã –∫ —Å–¥–∞—á–µ –æ—Ç –≤–æ–¥–∏—Ç–µ–ª–µ–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É (–°–¢–ê–†–ê–Ø –í–ï–†–°–ò–Ø)
// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ DEPRECATED.
func (bh *BotHandler) SendOwnerFinancialsForDate(chatID int64, user models.User, targetDate time.Time, messageIDToEdit int) {
	log.Printf("SendOwnerFinancialsForDate (DEPRECATED): –¥–ª—è ChatID %d, –¥–∞—Ç–∞ %s", chatID, targetDate.Format("2006-01-02"))
	bh.SendOwnerCashManagementMenu(chatID, user, messageIDToEdit)
}

// handleOwnerViewDriverSettlementsForDate - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –≤–æ–¥–∏—Ç–µ–ª—é –∑–∞ –¥–∞—Ç—É (–°–¢–ê–†–ê–Ø –í–ï–†–°–ò–Ø)
// –ú–æ–∂–µ—Ç –±—ã—Ç—å DEPRECATED. –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –≤ SendOwnerDriverIndividualSettlementsList.
func (bh *BotHandler) handleOwnerViewDriverSettlementsForDate(chatID int64, user models.User, driverUserID int64, reportDateStr string, messageIDToEdit int) {
	log.Printf("handleOwnerViewDriverSettlementsForDate (DEPRECATED): ChatID %d, DriverUserID %d, ReportDate %s", chatID, driverUserID, reportDateStr)
	// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–æ–≤–æ–µ –º–µ–Ω—é
	bh.SendOwnerDriverIndividualSettlementsList(chatID, user, messageIDToEdit, driverUserID, constants.VIEW_TYPE_ACTUAL_SETTLEMENTS, 0)
}

// handleOwnerEditSettlementStart - –Ω–∞—á–∞–ª–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º.
// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–º –∫–æ–ª–ª–±—ç–∫–æ–º CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT.
// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã viewTypeForBackNav –∏ pageForBackNav –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".
func (bh *BotHandler) handleOwnerEditSettlementStart(chatID int64, user models.User, settlementID int64, viewTypeForBackNav string, pageForBackNav int, messageIDToEdit int) {
	log.Printf("handleOwnerEditSettlementStart: ChatID=%d, SettlementID=%d, ViewTypeBack=%s, PageBack=%d", chatID, settlementID, viewTypeForBackNav, pageForBackNav)
	settlement, err := db.GetDriverSettlementByID(settlementID)
	if err != nil {
		bh.sendErrorMessageHelper(chatID, messageIDToEdit, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
		bh.SendOwnerCashManagementMenu(chatID, user, messageIDToEdit)
		return
	}

	tempSettleData := session.NewTempDriverSettlement()
	tempSettleData.EditingSettlementID = settlement.ID
	tempSettleData.SettlementCreateTime = settlement.SettlementTimestamp
	tempSettleData.OriginalPaidToOwnerAt = settlement.PaidToOwnerAt

	tempSettleData.CoveredOrdersRevenue = settlement.CoveredOrdersRevenue
	tempSettleData.FuelExpense = settlement.FuelExpense
	// tempSettleData.OtherExpense = settlement.OtherExpense // –£–î–ê–õ–ï–ù–û, –¢–ê–ö –ö–ê–ö OtherExpense –ë–û–õ–¨–®–ï –ù–ï–¢
	tempSettleData.OtherExpenses = make([]models.OtherExpenseDetail, len(settlement.OtherExpenses)) // –ò–ó–ú–ï–ù–ï–ù–û
	copy(tempSettleData.OtherExpenses, settlement.OtherExpenses)                                    // –ò–ó–ú–ï–ù–ï–ù–û

	tempSettleData.LoaderPayments = make([]models.LoaderPaymentDetail, len(settlement.LoaderPayments))
	copy(tempSettleData.LoaderPayments, settlement.LoaderPayments)
	tempSettleData.CoveredOrdersCount = settlement.CoveredOrdersCount
	tempSettleData.CoveredOrderIDs = make([]int64, len(settlement.CoveredOrderIDs))
	copy(tempSettleData.CoveredOrderIDs, settlement.CoveredOrderIDs)
	tempSettleData.CurrentMessageID = messageIDToEdit
	tempSettleData.DriverCalculatedSalary = settlement.DriverCalculatedSalary
	tempSettleData.AmountToCashier = settlement.AmountToCashier

	tempSettleData.DriverUserIDForBackNav = settlement.DriverUserID
	tempSettleData.ViewTypeForBackNav = viewTypeForBackNav
	tempSettleData.PageForBackNav = pageForBackNav

	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempSettleData)
	bh.SendOwnerEditSettlementFieldSelectMenu(chatID, settlement, messageIDToEdit)
}

// SendOwnerEditSettlementFieldSelectMenu - –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º.
func (bh *BotHandler) SendOwnerEditSettlementFieldSelectMenu(chatID int64, settlement models.DriverSettlement, messageIDToEdit int) {
	currentState := bh.Deps.SessionManager.GetState(chatID)
	if currentState != constants.STATE_OWNER_CASH_EDIT_SETTLEMENT_FIELD_SELECT {
		bh.Deps.SessionManager.SetState(chatID, constants.STATE_OWNER_CASH_EDIT_SETTLEMENT_FIELD_SELECT)
	}

	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	displayRevenue := settlement.CoveredOrdersRevenue
	displayFuel := settlement.FuelExpense
	displayLoaders := settlement.LoaderPayments

	// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–õ–Ø OtherExpenses ---
	var totalOtherExpenses float64
	var currentOtherExpensesInSession []models.OtherExpenseDetail

	if tempData.EditingSettlementID == settlement.ID {
		displayRevenue = tempData.CoveredOrdersRevenue
		displayFuel = tempData.FuelExpense
		currentOtherExpensesInSession = tempData.OtherExpenses // –ë–µ—Ä–µ–º –∏–∑ —Å–µ—Å—Å–∏–∏
		displayLoaders = tempData.LoaderPayments
	} else {
		currentOtherExpensesInSession = settlement.OtherExpenses // –ë–µ—Ä–µ–º –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ settlement
	}

	for _, oe := range currentOtherExpensesInSession {
		totalOtherExpenses += oe.Amount
	}
	otherExpensesStr := fmt.Sprintf("%.0f (%d —à—Ç.)", totalOtherExpenses, len(currentOtherExpensesInSession))
	if len(currentOtherExpensesInSession) == 0 {
		otherExpensesStr = "0 (–Ω–µ—Ç)"
	}
	// --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –î–õ–Ø OtherExpenses ---

	text := fmt.Sprintf("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –û—Ç—á–µ—Ç–∞ –í–æ–¥–∏—Ç–µ–ª—è #%d (–æ—Ç %s)\n\n–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è (–º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã –≤ —Å–µ—Å—Å–∏–∏):\n",
		settlement.ID, settlement.SettlementTimestamp.Format("02.01.06 15:04"))
	text += fmt.Sprintf("üí∞–í—ã—Ä—É—á–∫–∞: %.0f\n", displayRevenue)
	text += fmt.Sprintf("‚õΩÔ∏è–¢–æ–ø–ª–∏–≤–æ: %.0f\n", displayFuel)
	text += fmt.Sprintf("  –ü—Ä–æ—á–∏–µ: %s\n", otherExpensesStr) // –ò–ó–ú–ï–ù–ï–ù–û

	if len(displayLoaders) > 0 {
		text += "  –ì—Ä—É–∑—á–∏–∫–∏:\n"
		for _, lp := range displayLoaders {
			text += fmt.Sprintf("    - %s: %.0f ‚ÇΩ\n", utils.EscapeTelegramMarkdown(lp.LoaderIdentifier), lp.Amount)
		}
	}
	text += "\n–ö–∞–∫–æ–µ –ø–æ–ª–µ –∏–∑–º–µ–Ω–∏—Ç—å?"

	var rows [][]tgbotapi.InlineKeyboardButton
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("üí∞ –í—ã—Ä—É—á–∫–∞", fmt.Sprintf("%s_%d_field_revenue", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlement.ID)),
		tgbotapi.NewInlineKeyboardButtonData("‚õΩ –¢–æ–ø–ª–∏–≤–æ", fmt.Sprintf("%s_%d_field_fuel", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlement.ID)),
	))
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ö–æ–ª–ª–±—ç–∫ –¥–ª—è –ø—Ä–æ—á–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ —Ç–µ–ø–µ—Ä—å –¥—Ä—É–≥–æ–π (–≤–µ–¥–µ—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–∏) ---
		tgbotapi.NewInlineKeyboardButtonData("üõ†Ô∏è –ü—Ä–æ—á–∏–µ (–†–µ–¥.)", fmt.Sprintf("%s_%d_field_other_menu", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlement.ID)),
		// --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
		tgbotapi.NewInlineKeyboardButtonData("üë∑ –ì—Ä—É–∑—á–∏–∫–∏ (–†–µ–¥.)", fmt.Sprintf("%s_%d_field_loaders", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlement.ID)),
	))
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å", fmt.Sprintf("%s_%d_save", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlement.ID)),
	))

	backCallback := fmt.Sprintf("%s_%d_%s_%d",
		constants.CALLBACK_PREFIX_OWNER_VIEW_DRIVER_SETTLEMENTS,
		tempData.DriverUserIDForBackNav, // –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ handleOwnerEditSettlementStart
		tempData.ViewTypeForBackNav,
		tempData.PageForBackNav)
	if tempData.DriverUserIDForBackNav == 0 { // –§–æ–ª–ª–±—ç–∫, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
		backCallback = constants.CALLBACK_PREFIX_OWNER_CASH_MANAGEMENT_MAIN
	}

	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –æ—Ç—á–µ—Ç–∞–º –≤–æ–¥–∏—Ç–µ–ª—è", backCallback),
	))
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("üí∞ –í –º–µ–Ω—é –î–°", constants.CALLBACK_PREFIX_OWNER_CASH_MANAGEMENT_MAIN),
	))

	keyboard := tgbotapi.NewInlineKeyboardMarkup(rows...)
	sentMsg, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
	if err == nil && sentMsg.MessageID != 0 {
		currentTempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
		currentTempData.CurrentMessageID = sentMsg.MessageID
		bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, currentTempData)
	}
}

// handleOwnerEditSettlementFieldPrompt - –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—è –æ—Ç—á–µ—Ç–∞ (–≤–ª–∞–¥–µ–ª–µ—Ü).
func (bh *BotHandler) handleOwnerEditSettlementFieldPrompt(chatID int64, user models.User, settlementID int64, fieldKey string, messageIDToEdit int) {
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_OWNER_CASH_EDIT_SETTLEMENT_FIELD)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)

	if tempData.EditingSettlementID != settlementID && settlementID != 0 {
		log.Printf("handleOwnerEditSettlementFieldPrompt: ID –æ—Ç—á–µ—Ç–∞ –≤ —Å–µ—Å—Å–∏–∏ (%d) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å ID –∏–∑ –∫–æ–ª–ª–±—ç–∫–∞ (%d). –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞ #%d.", tempData.EditingSettlementID, settlementID, settlementID)
		settlementFromDB, errDB := db.GetDriverSettlementByID(settlementID)
		if errDB != nil {
			bh.sendErrorMessageHelper(chatID, messageIDToEdit, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç –∑–∞–Ω–æ–≤–æ.")
			bh.SendOwnerCashManagementMenu(chatID, user, messageIDToEdit)
			return
		}
		tempData.EditingSettlementID = settlementFromDB.ID
		tempData.SettlementCreateTime = settlementFromDB.SettlementTimestamp
		tempData.OriginalPaidToOwnerAt = settlementFromDB.PaidToOwnerAt
		tempData.DriverUserIDForBackNav = settlementFromDB.DriverUserID
	}

	tempData.FieldToEditByOwner = fieldKey
	tempData.CurrentMessageID = messageIDToEdit
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	var promptText string
	switch fieldKey {
	case "revenue":
		promptText = fmt.Sprintf("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –æ–±—â—É—é –≤—ã—Ä—É—á–∫—É –¥–ª—è –û—Ç—á–µ—Ç–∞ #%d:", settlementID)
	case "fuel":
		promptText = fmt.Sprintf("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É –Ω–∞ —Ç–æ–ø–ª–∏–≤–æ –¥–ª—è –û—Ç—á–µ—Ç–∞ #%d:", settlementID)
	case "other_menu": // –ò–ó–ú–ï–ù–ï–ù–û: —ç—Ç–æ —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—á–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏
		log.Printf("–ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—á–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞ #%d (–≤–ª–∞–¥–µ–ª–µ—Ü)", settlementID)
		// –ó–¥–µ—Å—å –º—ã –¥–æ–ª–∂–Ω—ã –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é SendDriverReportOtherExpensesMenu,
		// –Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞.
		// –ü–æ–∫–∞ —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç, –º–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è.
		// –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –Ω–∞–±–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –∫–æ–ª–ª–±—ç–∫–æ–≤ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞.
		// –í–†–ï–ú–ï–ù–ù–û:
		bh.sendInfoMessage(chatID, messageIDToEdit, "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ—á–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –∑–¥–µ—Å—å –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ '–ü—Ä–æ—á–∏–µ', –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å, –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ.",
			fmt.Sprintf("%s_%d", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlementID))
		bh.Deps.SessionManager.SetState(chatID, constants.STATE_OWNER_CASH_EDIT_SETTLEMENT_FIELD_SELECT)
		return

	case "loaders": // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –¥–ª—è –≥—Ä—É–∑—á–∏–∫–æ–≤ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ–µ –º–µ–Ω—é
		bh.sendInfoMessage(chatID, messageIDToEdit, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç –≥—Ä—É–∑—á–∏–∫–æ–≤ –≤ —ç—Ç–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ.",
			fmt.Sprintf("%s_%d", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlementID))
		bh.Deps.SessionManager.SetState(chatID, constants.STATE_OWNER_CASH_EDIT_SETTLEMENT_FIELD_SELECT)
		return
	default:
		// –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª —Å—Ç–∞—Ä—ã–π "other"
		if fieldKey == "other" {
			promptText = fmt.Sprintf("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ *–û–ë–©–£–Æ* —Å—É–º–º—É –ø—Ä–æ—á–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –¥–ª—è –û—Ç—á–µ—Ç–∞ #%d (0 –µ—Å–ª–∏ –Ω–µ—Ç). –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—á–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –º–µ–Ω—é.", settlementID)
		} else {
			bh.sendErrorMessageHelper(chatID, messageIDToEdit, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
			settlementFromDB, _ := db.GetDriverSettlementByID(settlementID)
			bh.SendOwnerEditSettlementFieldSelectMenu(chatID, settlementFromDB, messageIDToEdit)
			return
		}
	}

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –ø–æ–ª—è", fmt.Sprintf("%s_%d", constants.CALLBACK_PREFIX_OWNER_EDIT_SETTLEMENT, settlementID)),
		),
	)
	sentMsg, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, promptText, &keyboard, "")
	if err == nil && sentMsg.MessageID != 0 {
		currentTempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
		currentTempData.CurrentMessageID = sentMsg.MessageID
		bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, currentTempData)
	}
}

// handleOwnerSaveEditedSettlementFieldInput - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è –æ—Ç—á–µ—Ç–∞ (–≤–ª–∞–¥–µ–ª–µ—Ü)
func (bh *BotHandler) handleOwnerSaveEditedSettlementFieldInput(chatID int64, user models.User, textInput string, userMsgID int, botMenuMsgID int) {
	bh.deleteMessageHelper(chatID, userMsgID)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	settlementID := tempData.EditingSettlementID
	fieldKey := tempData.FieldToEditByOwner

	if settlementID == 0 {
		bh.sendErrorMessageHelper(chatID, botMenuMsgID, "–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω –æ—Ç—á–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
		bh.SendOwnerCashManagementMenu(chatID, user, botMenuMsgID)
		return
	}

	originalSettlement, errDB := db.GetDriverSettlementByID(settlementID)
	if errDB != nil {
		bh.sendErrorMessageHelper(chatID, botMenuMsgID, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
		bh.SendOwnerCashManagementMenu(chatID, user, botMenuMsgID)
		return
	}

	val, err := strconv.ParseFloat(strings.Replace(textInput, ",", ".", -1), 64)
	if err != nil {
		bh.sendErrorMessageHelper(chatID, botMenuMsgID, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
		bh.SendOwnerEditSettlementFieldSelectMenu(chatID, originalSettlement, botMenuMsgID)
		return
	}

	switch fieldKey {
	case "revenue":
		tempData.CoveredOrdersRevenue = val
	case "fuel":
		tempData.FuelExpense = val
	case "other": // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–ª—è "other"
		if val == 0 {
			// –ï—Å–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü –≤–≤–æ–¥–∏—Ç 0 –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ "other", –º—ã –æ—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö OtherExpenses.
			// –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –≤–≤–æ–¥–∞ –û–ë–©–ï–ô —Å—É–º–º—ã, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ.
			tempData.OtherExpenses = []models.OtherExpenseDetail{}
		} else {
			// –ï—Å–ª–∏ –≤–≤–æ–¥–∏—Ç—Å—è –Ω–µ–Ω—É–ª–µ–≤–∞—è –û–ë–©–ê–Ø —Å—É–º–º–∞, –∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–µ –±—ã–ª–æ,
			// —Å–æ–∑–¥–∞–µ–º –æ–¥–Ω—É –∑–∞–ø–∏—Å—å "–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã (–æ–±—â–∞—è —Å—É–º–º–∞)"
			if len(tempData.OtherExpenses) == 0 {
				tempData.OtherExpenses = []models.OtherExpenseDetail{{Description: "–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã (–æ–±—â–∞—è —Å—É–º–º–∞)", Amount: val}}
			} else {
				// –ï—Å–ª–∏ —É–∂–µ –±—ã–ª–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã, –∞ –≤–ª–∞–¥–µ–ª–µ—Ü –≤–≤–æ–¥–∏—Ç –æ–±—â—É—é —Å—É–º–º—É, —ç—Ç–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç.
				// –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º. –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç UX —Ä–µ—à–µ–Ω–∏—è.
				log.Printf("–í–ù–ò–ú–ê–ù–ò–ï: –í–ª–∞–¥–µ–ª–µ—Ü –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –æ–±—â–µ–π —Å—É–º–º–æ–π –¥–ª—è –æ—Ç—á–µ—Ç–∞ #%d", settlementID)
				tempData.OtherExpenses = []models.OtherExpenseDetail{{Description: "–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã (–æ–±—â–∞—è —Å—É–º–º–∞, –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ)", Amount: val}}
			}
		}
	default:
		bh.sendErrorMessageHelper(chatID, botMenuMsgID, "–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
		bh.SendOwnerEditSettlementFieldSelectMenu(chatID, originalSettlement, botMenuMsgID)
		return
	}

	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)
	bh.SendOwnerEditSettlementFieldSelectMenu(chatID, originalSettlement, botMenuMsgID)
}

// handleOwnerSaveAllSettlementChanges - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –æ—Ç—á–µ—Ç–µ –∏ –ø–µ—Ä–µ—Å—á–µ—Ç.
func (bh *BotHandler) handleOwnerSaveAllSettlementChanges(chatID int64, user models.User, settlementID int64, messageIDToEdit int) {
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	if tempData.EditingSettlementID != settlementID || settlementID == 0 {
		bh.sendErrorMessageHelper(chatID, messageIDToEdit, "–û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ—Ç–µ—Ä—è–Ω.")
		bh.SendOwnerCashManagementMenu(chatID, user, messageIDToEdit)
		return
	}

	originalSettlement, errDB := db.GetDriverSettlementByID(settlementID)
	if errDB != nil {
		bh.sendErrorMessageHelper(chatID, messageIDToEdit, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
		bh.SendOwnerCashManagementMenu(chatID, user, messageIDToEdit)
		return
	}

	settlementToSave := models.DriverSettlement{
		ID:                     tempData.EditingSettlementID,
		DriverUserID:           originalSettlement.DriverUserID,
		SettlementTimestamp:    tempData.SettlementCreateTime,
		CoveredOrdersRevenue:   tempData.CoveredOrdersRevenue,
		FuelExpense:            tempData.FuelExpense,
		OtherExpenses:          tempData.OtherExpenses, // –ò–°–ü–û–õ–¨–ó–£–ï–ú –û–ë–ù–û–í–õ–ï–ù–ù–û–ï –ü–û–õ–ï
		LoaderPayments:         tempData.LoaderPayments,
		CoveredOrdersCount:     originalSettlement.CoveredOrdersCount,
		CoveredOrderIDs:        originalSettlement.CoveredOrderIDs,
		PaidToOwnerAt:          tempData.OriginalPaidToOwnerAt,
		DriverCalculatedSalary: 0,
		AmountToCashier:        0,
	}
	if tempData.SettlementCreateTime.IsZero() {
		settlementToSave.SettlementTimestamp = originalSettlement.SettlementTimestamp
	}

	// –ü–µ—Ä–µ—Å—á–µ—Ç –æ–±—â–µ–π —Å—É–º–º—ã OtherExpense –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ —ç—Ç–æ –≤—Å–µ –µ—â–µ —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ –≤ –ë–î
	// –∏ –µ—Å–ª–∏ tempData.OtherExpenses –Ω–µ –ø—É—Å—Ç–æ–µ. –ï—Å–ª–∏ OtherExpenses –ø—É—Å—Ç–æ–µ, –∏ –≤ —Å—Ç–∞—Ä–æ–º other_expense –±—ã–ª 0, —Ç–æ —ç—Ç–æ –æ–∫.
	// –ù–û! –ú—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ other_expenses_json, –ø–æ—ç—Ç–æ–º—É RecalculateTotals –≤ UpdateDriverSettlement –¥–æ–ª–∂–µ–Ω —ç—Ç–æ —É—á–µ—Å—Ç—å.

	err := db.UpdateDriverSettlement(settlementToSave)
	if err != nil {
		bh.sendErrorMessageHelper(chatID, messageIDToEdit, fmt.Sprintf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –æ—Ç—á–µ—Ç–µ #%d: %v", settlementID, err))
		bh.SendOwnerEditSettlementFieldSelectMenu(chatID, originalSettlement, messageIDToEdit)
		return
	}

	updatedSettlement, _ := db.GetDriverSettlementByID(settlementID)

	backToListCallback := fmt.Sprintf("%s_%d_%s_%d",
		constants.CALLBACK_PREFIX_OWNER_VIEW_DRIVER_SETTLEMENTS,
		updatedSettlement.DriverUserID,
		tempData.ViewTypeForBackNav,
		tempData.PageForBackNav)

	bh.sendInfoMessage(chatID, messageIDToEdit, fmt.Sprintf("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –û—Ç—á–µ—Ç–µ #%d —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ —Å—É–º–º—ã –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω—ã.", settlementID),
		backToListCallback)

	currentTempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	currentTempData.EditingSettlementID = 0
	currentTempData.FieldToEditByOwner = ""
	currentTempData.SettlementCreateTime = time.Time{}
	currentTempData.OriginalPaidToOwnerAt = sql.NullTime{}
	// OtherExpenses –æ—á–∏—â–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã –æ–Ω–∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—Ö–æ–¥–∞ –≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ *—ç—Ç–æ–≥–æ –∂–µ* –æ—Ç—á–µ—Ç–∞
	// –ù–æ –µ—Å–ª–∏ —ç—Ç–æ –±—ã–ª –æ—Ç—á–µ—Ç –≤–æ–¥–∏—Ç–µ–ª—è –∏ –≤–ª–∞–¥–µ–ª–µ—Ü –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª, —Ç–æ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—Ö–æ–¥–µ –≤–æ–¥–∏—Ç–µ–ª—è –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞, OtherExpenses –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏.
	// –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –∏—Ö –≤ —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ EditingSettlementID —Å–±—Ä–æ—à–µ–Ω, –æ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –≤–ª–∏—è—Ç—å –Ω–∞ –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç.
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, currentTempData)
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_OWNER_CASH_VIEW_DRIVER_SETTLEMENTS)
}
