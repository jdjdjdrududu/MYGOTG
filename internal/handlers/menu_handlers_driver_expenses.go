package handlers

import (
	"Original/internal/constants"
	"Original/internal/db"
	"Original/internal/models"
	"Original/internal/session"
	"Original/internal/utils"
	"fmt"
	tgbotapi "github.com/OvyFlash/telegram-bot-api"
	"log"
	"strings"
	"time"
)

// StartDriverInlineReport - —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ
func (bh *BotHandler) StartDriverInlineReport(chatID int64, user models.User, messageIDToEdit int) {
	log.Printf("StartDriverInlineReport: –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è ChatID=%d, UserID=%d, MessageIDToEdit=%d", chatID, user.ID, messageIDToEdit)

	unsettledOrders, err := db.GetUnsettledCompletedOrdersForDriver(user.ID)
	if err != nil {
		log.Printf("StartDriverInlineReport: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è UserID %d: %v", user.ID, err)
		bh.sendErrorMessageHelper(chatID, messageIDToEdit, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		bh.SendMainMenu(chatID, user, messageIDToEdit)
		return
	}

	if len(unsettledOrders) == 0 {
		log.Printf("StartDriverInlineReport: –Ω–µ—Ç –Ω–µ—Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è UserID %d.", user.ID)
		bh.sendInfoMessage(chatID, messageIDToEdit, "–£ –≤–∞—Å –Ω–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö —Ä–∞—Å—á–µ—Ç–∞.", "back_to_main")
		bh.Deps.SessionManager.ClearState(chatID)
		bh.Deps.SessionManager.ClearTempDriverSettlement(chatID)
		return
	}

	tempData := session.NewTempDriverSettlement()
	tempData.SettlementCreateTime = time.Now()
	tempData.UnsettledOrders = unsettledOrders
	tempData.CoveredOrdersCount = len(unsettledOrders)
	var totalRevenue float64
	var orderIDs []int64
	for _, order := range unsettledOrders {
		if order.Cost.Valid {
			totalRevenue += order.Cost.Float64
		}
		orderIDs = append(orderIDs, order.ID)
	}
	tempData.CoveredOrdersRevenue = totalRevenue
	tempData.CoveredOrderIDs = orderIDs

	assignedLoadersMap := make(map[int64]string)
	for _, orderID := range tempData.CoveredOrderIDs {
		executors, errExec := db.GetExecutorsByOrderID(int(orderID))
		if errExec != nil {
			log.Printf("StartDriverInlineReport: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞ #%d: %v", orderID, errExec)
			continue
		}
		for _, executor := range executors {
			if executor.Role == constants.ROLE_LOADER {
				if _, exists := assignedLoadersMap[executor.UserID]; !exists {
					loaderUser, errLoaderUser := db.GetUserByID(int(executor.UserID))
					if errLoaderUser == nil {
						assignedLoadersMap[executor.UserID] = utils.GetUserDisplayName(loaderUser)
					} else {
						assignedLoadersMap[executor.UserID] = fmt.Sprintf("–ì—Ä—É–∑—á–∏–∫ ID %d", executor.UserID)
						log.Printf("StartDriverInlineReport: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –¥–ª—è –≥—Ä—É–∑—á–∏–∫–∞ UserID %d: %v", executor.UserID, errLoaderUser)
					}
				}
			}
		}
	}

	if len(assignedLoadersMap) > 0 {
		tempData.LoaderPayments = make([]models.LoaderPaymentDetail, 0, len(assignedLoadersMap))
		for loaderUserID, loaderName := range assignedLoadersMap {
			tempData.LoaderPayments = append(tempData.LoaderPayments, models.LoaderPaymentDetail{
				LoaderUserID:     loaderUserID,
				LoaderIdentifier: loaderName,
				Amount:           0,
			})
		}
		log.Printf("StartDriverInlineReport: –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ %d –≥—Ä—É–∑—á–∏–∫–æ–≤ –¥–ª—è –æ—Ç—á–µ—Ç–∞.", len(tempData.LoaderPayments))
	}

	if messageIDToEdit != 0 {
		tempData.CurrentMessageID = messageIDToEdit
	}
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)
	log.Printf("StartDriverInlineReport: –í–æ–¥–∏—Ç–µ–ª—å UserID %d –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–æ—Ç—á–µ—Ç –ø–æ %d –∑–∞–∫–∞–∑–∞–º. –í—ã—Ä—É—á–∫–∞: %.0f. –ó–∞–∫–∞–∑—ã: %v. –ì—Ä—É–∑—á–∏–∫–∏: %d",
		user.ID, tempData.CoveredOrdersCount, tempData.CoveredOrdersRevenue, tempData.CoveredOrderIDs, len(tempData.LoaderPayments))

	bh.SendDriverReportOverallMenu(chatID, user, messageIDToEdit)
}

// SendDriverReportOverallMenu - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∏–Ω–ª–∞–π–Ω-–æ—Ç—á–µ—Ç–∞
func (bh *BotHandler) SendDriverReportOverallMenu(chatID int64, user models.User, messageIDToEdit int) {
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_DRIVER_REPORT_OVERALL_MENU)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)

	currentMessageIDForThisMenu := messageIDToEdit
	if tempData.CurrentMessageID != 0 && messageIDToEdit == 0 {
		currentMessageIDForThisMenu = tempData.CurrentMessageID
	}

	tempData.RecalculateTotals(bh.Deps.Config.DriverSharePercentage)
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	orderIDsStr := "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"
	if len(tempData.CoveredOrderIDs) > 0 {
		orderIDsStr = strings.Join(utils.Int64SliceToStringSlice(tempData.CoveredOrderIDs), ", ")
	}

	text := fmt.Sprintf("üìù *–û—Ç—á–µ—Ç –ø–æ –∑–∞–∫–∞–∑–∞–º (ID: %s)*\n", orderIDsStr)
	text += fmt.Sprintf("üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: *%.0f ‚ÇΩ*\n\n", tempData.CoveredOrdersRevenue)
	text += "‚úèÔ∏è *–í–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã:*\n"
	fuelTextButton := fmt.Sprintf("‚õΩÔ∏è –¢–æ–ø–ª–∏–≤–æ: %.0f ‚ÇΩ", tempData.FuelExpense)

	// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ü–†–û–ß–ò–• –†–ê–°–•–û–î–û–í ---
	var totalOtherExpenses float64
	for _, oe := range tempData.OtherExpenses {
		totalOtherExpenses += oe.Amount
	}
	otherExpensesSummary := "–ù–µ—Ç"
	if len(tempData.OtherExpenses) > 0 {
		otherExpensesSummary = fmt.Sprintf("%d —à—Ç, %.0f ‚ÇΩ", len(tempData.OtherExpenses), totalOtherExpenses)
	}
	otherTextButton := fmt.Sprintf("üõ†Ô∏è –ü—Ä–æ—á–∏–µ: %s", otherExpensesSummary)
	// --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

	loadersSummary := "–ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö/–¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö"
	totalLoaderSalary := 0.0
	if len(tempData.LoaderPayments) > 0 {
		for _, p := range tempData.LoaderPayments {
			totalLoaderSalary += p.Amount
		}
		loadersSummary = fmt.Sprintf("%d —á–µ–ª, %.0f ‚ÇΩ", len(tempData.LoaderPayments), totalLoaderSalary)
	}
	loadersTextButton := fmt.Sprintf("üë∑‚Äç‚ôÇÔ∏è –ó–ü –ì—Ä—É–∑—á–∏–∫–∞–º: %s", loadersSummary)

	text += "\n-------------------------------------\n"
	text += fmt.Sprintf("üí∏ –í–∞—à–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ (%.0f%%): *%.0f ‚ÇΩ*\n", bh.Deps.Config.DriverSharePercentage*100, tempData.DriverCalculatedSalary)
	text += fmt.Sprintf("‚û°Ô∏è –°—É–º–º–∞ –∫ —Å–¥–∞—á–µ –≤ –∫–∞—Å—Å—É: *%.0f ‚ÇΩ*\n", tempData.AmountToCashier)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(fuelTextButton, constants.CALLBACK_PREFIX_DRIVER_REPORT_SET_FUEL),
		),
		tgbotapi.NewInlineKeyboardRow(
			// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ö–û–õ–õ–ë–≠–ö–ê –î–õ–Ø –ü–†–û–ß–ò–• –†–ê–°–•–û–î–û–í ---
			tgbotapi.NewInlineKeyboardButtonData(otherTextButton, constants.CALLBACK_PREFIX_DRIVER_REPORT_OTHER_EXPENSES_MENU),
			// --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(loadersTextButton, constants.CALLBACK_PREFIX_DRIVER_REPORT_LOADERS_MENU),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç", constants.CALLBACK_PREFIX_DRIVER_REPORT_SAVE_FINAL),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏", constants.CALLBACK_PREFIX_DRIVER_REPORT_CANCEL_ALL),
		),
	)

	sentMsg, err := bh.sendOrEditMessageHelper(chatID, currentMessageIDForThisMenu, text, &keyboard, tgbotapi.ModeMarkdown)
	if err == nil && sentMsg.MessageID != 0 {
		updatedTempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
		updatedTempData.CurrentMessageID = sentMsg.MessageID
		bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, updatedTempData)
		log.Printf("SendDriverReportOverallMenu: CurrentMessageID –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ %d", sentMsg.MessageID)
	} else if err != nil {
		log.Printf("SendDriverReportOverallMenu: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω—é –æ—Ç—á–µ—Ç–∞: %v", err)
	}
}

// SendDriverReportFuelInputPrompt - –∑–∞–ø—Ä–æ—Å —Å—É–º–º—ã —Ç–æ–ø–ª–∏–≤–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
func (bh *BotHandler) SendDriverReportFuelInputPrompt(chatID int64, user models.User, messageIDToEdit int) {
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_DRIVER_REPORT_INPUT_FUEL)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	text := "‚õΩ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ *—Ç–æ–ø–ª–∏–≤–æ* (‚ÇΩ) –ø–æ —ç—Ç–∏–º –∑–∞–∫–∞–∑–∞–º:"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –æ—Ç—á–µ—Ç—É", constants.CALLBACK_PREFIX_DRIVER_REPORT_OVERALL_MENU),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// --- –ù–ê–ß–ê–õ–û –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô –î–õ–Ø –ü–†–û–ß–ò–• –†–ê–°–•–û–î–û–í ---

// SendDriverReportOtherExpensesMenu - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—á–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏.
func (bh *BotHandler) SendDriverReportOtherExpensesMenu(chatID int64, user models.User, messageIDToEdit int) {
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_DRIVER_REPORT_OTHER_EXPENSES_MENU) // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω—é
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	// –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞
	tempData.TempOtherExpenseDescription = ""
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	var text strings.Builder
	text.WriteString("üõ†Ô∏è *–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –∑–∞–∫–∞–∑–∞–º:*\n\n")

	if len(tempData.OtherExpenses) == 0 {
		text.WriteString("_–ü—Ä–æ—á–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ._\n")
	} else {
		for i, expense := range tempData.OtherExpenses {
			text.WriteString(fmt.Sprintf("%d. %s: *%.0f ‚ÇΩ*\n", i+1, utils.EscapeTelegramMarkdown(expense.Description), expense.Amount))
			// TODO: –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è
			// CALLBACK_PREFIX_DRIVER_REPORT_EDIT_OTHER_EXPENSE_PROMPT_i
			// CALLBACK_PREFIX_DRIVER_REPORT_DELETE_OTHER_EXPENSE_CONFIRM_i
		}
	}
	text.WriteString("\n–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–±—â–µ–º—É –æ—Ç—á–µ—Ç—É.")

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞—Å—Ö–æ–¥", constants.CALLBACK_PREFIX_DRIVER_REPORT_ADD_OTHER_EXPENSE_DESCRIPTION_PROMPT),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –æ–±—â–µ–º—É –æ—Ç—á–µ—Ç—É", constants.CALLBACK_PREFIX_DRIVER_REPORT_OVERALL_MENU),
		),
	)

	sentMsg, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text.String(), &keyboard, tgbotapi.ModeMarkdown)
	if err == nil && sentMsg.MessageID != 0 {
		updatedTempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
		updatedTempData.CurrentMessageID = sentMsg.MessageID
		bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, updatedTempData)
	} else if err != nil {
		log.Printf("SendDriverReportOtherExpensesMenu: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: %v", err)
	}
}

// SendDriverReportOtherExpenseDescriptionPrompt - –∑–∞–ø—Ä–æ—Å –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—á–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞.
func (bh *BotHandler) SendDriverReportOtherExpenseDescriptionPrompt(chatID int64, user models.User, messageIDToEdit int, isEditing bool, expenseIndex int) {
	var stateToSet string
	var currentDescription string
	if isEditing {
		stateToSet = constants.STATE_DRIVER_REPORT_EDIT_OTHER_EXPENSE_DESCRIPTION
		tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
		if expenseIndex >= 0 && expenseIndex < len(tempData.OtherExpenses) {
			currentDescription = tempData.OtherExpenses[expenseIndex].Description
		}
	} else {
		stateToSet = constants.STATE_DRIVER_REPORT_INPUT_OTHER_EXPENSE_DESCRIPTION
	}
	bh.Deps.SessionManager.SetState(chatID, stateToSet)

	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	tempData.EditingOtherExpenseIndex = expenseIndex // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º, –∏–ª–∏ -1 –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º
	if isEditing {
		tempData.TempOtherExpenseDescription = currentDescription // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω—è–µ–º –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	} else {
		tempData.TempOtherExpenseDescription = "" // –û—á–∏—â–∞–µ–º –¥–ª—è –Ω–æ–≤–æ–≥–æ
	}
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	text := "üìù –í–≤–µ–¥–∏—Ç–µ *–æ–ø–∏—Å–∞–Ω–∏–µ* –ø—Ä–æ—á–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü–∞—Ä–∫–æ–≤–∫–∞', '–®—Ç—Ä–∞—Ñ')"
	if isEditing && currentDescription != "" {
		text = fmt.Sprintf("üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ *–æ–ø–∏—Å–∞–Ω–∏–µ* –¥–ª—è '%s' (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—É—â–µ–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤ –µ–≥–æ —Å–Ω–æ–≤–∞):", utils.EscapeTelegramMarkdown(currentDescription))
	} else if isEditing {
		text = "üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ *–æ–ø–∏—Å–∞–Ω–∏–µ* –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞:"
	}

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –ø—Ä–æ—á–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤", constants.CALLBACK_PREFIX_DRIVER_REPORT_OTHER_EXPENSES_MENU),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// SendDriverReportOtherExpenseAmountPrompt - –∑–∞–ø—Ä–æ—Å —Å—É–º–º—ã –¥–ª—è –ø—Ä–æ—á–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞.
func (bh *BotHandler) SendDriverReportOtherExpenseAmountPrompt(chatID int64, user models.User, messageIDToEdit int, description string, isEditing bool, expenseIndex int) {
	var stateToSet string
	var currentAmount float64
	if isEditing {
		stateToSet = constants.STATE_DRIVER_REPORT_EDIT_OTHER_EXPENSE_AMOUNT
		tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
		if expenseIndex >= 0 && expenseIndex < len(tempData.OtherExpenses) {
			// –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç, –µ—Å–ª–∏ –º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
			// –≠—Ç–æ –≤–∞–∂–Ω–æ, –µ—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
			if tempData.TempOtherExpenseDescription == tempData.OtherExpenses[expenseIndex].Description || description == tempData.OtherExpenses[expenseIndex].Description {
				currentAmount = tempData.OtherExpenses[expenseIndex].Amount
			} else { // –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –Ω–æ–≤—ã–π –≤–≤–æ–¥ —Å—É–º–º—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
				currentAmount = 0 // –∏–ª–∏ –º–æ–∂–Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—É–º–º—É, –µ—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–µ
			}
		}
	} else {
		stateToSet = constants.STATE_DRIVER_REPORT_INPUT_OTHER_EXPENSE_AMOUNT
	}
	bh.Deps.SessionManager.SetState(chatID, stateToSet)

	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	// TempOtherExpenseDescription —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ (–∏–ª–∏ –≤–∑—è—Ç –∏–∑ existing item –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏)
	// EditingOtherExpenseIndex —Ç–æ–∂–µ —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –µ—Å–ª–∏ isEditing = true
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	text := fmt.Sprintf("üí∞ –í–≤–µ–¥–∏—Ç–µ *—Å—É–º–º—É* (‚ÇΩ) –¥–ª—è —Ä–∞—Å—Ö–æ–¥–∞ '%s'", utils.EscapeTelegramMarkdown(description))
	if isEditing {
		text = fmt.Sprintf("üí∞ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é *—Å—É–º–º—É* (‚ÇΩ) –¥–ª—è '%s' (—Ç–µ–∫—É—â–∞—è: %.0f):", utils.EscapeTelegramMarkdown(description), currentAmount)
	}

	backCallbackData := constants.CALLBACK_PREFIX_DRIVER_REPORT_ADD_OTHER_EXPENSE_DESCRIPTION_PROMPT // –î–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞
	if isEditing {
		// –ü—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—É–º–º—ã, "–ù–∞–∑–∞–¥" –¥–æ–ª–∂–Ω–æ –≤–µ—Å—Ç–∏ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –æ–ø–∏—Å–∞–Ω–∏—è –≠–¢–û–ì–û –ñ–ï —Ä–∞—Å—Ö–æ–¥–∞.
		backCallbackData = fmt.Sprintf("%s_%d", constants.CALLBACK_PREFIX_DRIVER_REPORT_EDIT_OTHER_EXPENSE_PROMPT, expenseIndex)
	}

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –æ–ø–∏—Å–∞–Ω–∏—é", backCallbackData),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// SendDriverReportConfirmAddOtherExpense - –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –µ—â–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—á–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞.
func (bh *BotHandler) SendDriverReportConfirmAddOtherExpense(chatID int64, user models.User, messageIDToEdit int, addedDescription string, addedAmount float64) {
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_DRIVER_REPORT_CONFIRM_ADD_OTHER_EXPENSE) // –≠—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	text := fmt.Sprintf("‚úÖ –†–∞—Å—Ö–æ–¥ '%s: %.0f ‚ÇΩ' –¥–æ–±–∞–≤–ª–µ–Ω.\n\n–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –ø—Ä–æ—á–∏–π —Ä–∞—Å—Ö–æ–¥?",
		utils.EscapeTelegramMarkdown(addedDescription), addedAmount)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ûï –î–∞, –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ", constants.CALLBACK_PREFIX_DRIVER_REPORT_ADD_OTHER_EXPENSE_DESCRIPTION_PROMPT),
		),
		tgbotapi.NewInlineKeyboardRow(
			// –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—á–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤, –≥–¥–µ –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –Ω–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥
			tgbotapi.NewInlineKeyboardButtonData("‚Ü™Ô∏è –ù–µ—Ç, –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã", constants.CALLBACK_PREFIX_DRIVER_REPORT_OTHER_EXPENSES_MENU),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// --- –ö–û–ù–ï–¶ –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô –î–õ–Ø –ü–†–û–ß–ò–• –†–ê–°–•–û–î–û–í ---

// SendDriverReportLoadersSubMenu - –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–∑—á–∏–∫–∞–º–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
func (bh *BotHandler) SendDriverReportLoadersSubMenu(chatID int64, user models.User, messageIDToEdit int) {
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_DRIVER_REPORT_LOADERS_MENU)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	text := "üë∑‚Äç‚ôÇÔ∏è *–ó–∞—Ä–ø–ª–∞—Ç—ã –≥—Ä—É–∑—á–∏–∫–∞–º –ø–æ –¥–∞–Ω–Ω—ã–º –∑–∞–∫–∞–∑–∞–º:*\n(–£–∫–∞–∂–∏—Ç–µ –ó–ü –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –≥—Ä—É–∑—á–∏–∫–æ–≤)\n\n"
	var rows [][]tgbotapi.InlineKeyboardButton

	if len(tempData.LoaderPayments) == 0 {
		text += "_–ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –≥—Ä—É–∑—á–∏–∫–æ–≤ –ø–æ –¥–∞–Ω–Ω—ã–º –∑–∞–∫–∞–∑–∞–º, –∏–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –æ—Ç—á–µ—Ç._\n"
	} else {
		for i, loaderPayment := range tempData.LoaderPayments {
			loaderRowText := fmt.Sprintf("%s: %.0f ‚ÇΩ", utils.EscapeTelegramMarkdown(loaderPayment.LoaderIdentifier), loaderPayment.Amount)
			rows = append(rows, tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData(fmt.Sprintf("‚úèÔ∏è %s", loaderRowText), fmt.Sprintf("%s_%d", constants.CALLBACK_PREFIX_DRIVER_REPORT_EDIT_LOADER_PROMPT, i)),
			))
		}
	}
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –æ—Ç—á–µ—Ç—É", constants.CALLBACK_PREFIX_DRIVER_REPORT_OVERALL_MENU),
	))
	keyboard := tgbotapi.NewInlineKeyboardMarkup(rows...)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// SendDriverReportLoaderNameInputPrompt - –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –Ω–æ–≤–æ–≥–æ –≥—Ä—É–∑—á–∏–∫–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
func (bh *BotHandler) SendDriverReportLoaderNameInputPrompt(chatID int64, user models.User, messageIDToEdit int) {
	bh.Deps.SessionManager.SetState(chatID, constants.STATE_DRIVER_REPORT_INPUT_LOADER_NAME)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	tempData.TempLoaderNameInput = ""
	tempData.EditingLoaderIndex = -1
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	text := "üßë‚Äçüîß –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤–æ–≥–æ –≥—Ä—É–∑—á–∏–∫–∞ (–µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –∑–∞–∫–∞–∑):"
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –≥—Ä—É–∑—á–∏–∫–æ–≤", constants.CALLBACK_PREFIX_DRIVER_REPORT_LOADERS_MENU),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// SendDriverReportLoaderSalaryInputPrompt - –∑–∞–ø—Ä–æ—Å –ó–ü –¥–ª—è –≥—Ä—É–∑—á–∏–∫–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
func (bh *BotHandler) SendDriverReportLoaderSalaryInputPrompt(chatID int64, user models.User, messageIDToEdit int, loaderIdentifier string, isEditing bool, loaderIndex int) {
	var stateToSet string
	var backCallback string

	if isEditing {
		stateToSet = constants.STATE_DRIVER_REPORT_EDIT_LOADER_SALARY
		backCallback = constants.CALLBACK_PREFIX_DRIVER_REPORT_LOADERS_MENU
	} else {
		stateToSet = constants.STATE_DRIVER_REPORT_INPUT_LOADER_SALARY
		backCallback = constants.CALLBACK_PREFIX_DRIVER_REPORT_LOADERS_MENU
	}

	bh.Deps.SessionManager.SetState(chatID, stateToSet)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	if isEditing {
		tempData.EditingLoaderIndex = loaderIndex
	} else {
		tempData.EditingLoaderIndex = -1
	}
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	currentSalary := 0.0
	if isEditing && loaderIndex >= 0 && loaderIndex < len(tempData.LoaderPayments) {
		currentSalary = tempData.LoaderPayments[loaderIndex].Amount
	}

	text := fmt.Sprintf("üí∏ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç—ã (‚ÇΩ) –¥–ª—è –≥—Ä—É–∑—á–∏–∫–∞ *%s* (—Ç–µ–∫—É—â–∞—è: %.0f ‚ÇΩ):",
		utils.EscapeTelegramMarkdown(loaderIdentifier), currentSalary)
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", backCallback),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// SendDriverReportConfirmDeleteLoaderPrompt - –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–∑—á–∏–∫–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
func (bh *BotHandler) SendDriverReportConfirmDeleteLoaderPrompt(chatID int64, user models.User, messageIDToEdit int, loaderIndex int) {
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	tempData.EditingLoaderIndex = loaderIndex
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	if loaderIndex < 0 || loaderIndex >= len(tempData.LoaderPayments) {
		bh.sendErrorMessageHelper(chatID, messageIDToEdit, "–û—à–∏–±–∫–∞: –≥—Ä—É–∑—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º –æ—Ç—á–µ—Ç–µ.")
		bh.SendDriverReportLoadersSubMenu(chatID, user, messageIDToEdit)
		return
	}
	loaderToDelete := tempData.LoaderPayments[loaderIndex]
	text := fmt.Sprintf("üóëÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –æ –ó–ü –¥–ª—è –≥—Ä—É–∑—á–∏–∫–∞ *%s* (–¢–µ–∫—É—â–∞—è –ó–ü: %.0f ‚ÇΩ) –∏–∑ —ç—Ç–æ–≥–æ –æ—Ç—á–µ—Ç–∞?",
		utils.EscapeTelegramMarkdown(loaderToDelete.LoaderIdentifier), loaderToDelete.Amount)

	confirmCallback := fmt.Sprintf("%s_%d", constants.CALLBACK_PREFIX_DRIVER_REPORT_DELETE_LOADER_CONFIRM, loaderIndex)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å –∏–∑ –æ—Ç—á–µ—Ç–∞", confirmCallback),
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –ù–µ—Ç, –Ω–∞–∑–∞–¥", constants.CALLBACK_PREFIX_DRIVER_REPORT_LOADERS_MENU),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}
func (bh *BotHandler) SendDriverReportConfirmDeleteOtherExpensePrompt(chatID int64, user models.User, messageIDToEdit int, expenseIndex int) {
	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–ª–ª–±—ç–∫–∞ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏,
	// –ø–æ—ç—Ç–æ–º—É –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–µ –º–µ–Ω—è—Ç—å, –ª–∏–±–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞ STATE_DRIVER_REPORT_CONFIRM_DELETE_OTHER_EXPENSE, –µ—Å–ª–∏ —Ç–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å—Ç—å
	// bh.Deps.SessionManager.SetState(chatID, constants.STATE_DRIVER_REPORT_CONFIRM_DELETE_OTHER_EXPENSE)
	tempData := bh.Deps.SessionManager.GetTempDriverSettlement(chatID)
	tempData.CurrentMessageID = messageIDToEdit
	tempData.EditingOtherExpenseIndex = expenseIndex // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è —É–¥–∞–ª–µ–Ω–∏—è
	bh.Deps.SessionManager.UpdateTempDriverSettlement(chatID, tempData)

	if expenseIndex < 0 || expenseIndex >= len(tempData.OtherExpenses) {
		bh.sendErrorMessageHelper(chatID, messageIDToEdit, "–û—à–∏–±–∫–∞: —Ä–∞—Å—Ö–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		bh.SendDriverReportOtherExpensesMenu(chatID, user, messageIDToEdit) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —Å–ø–∏—Å–∫—É
		return
	}
	expenseToDelete := tempData.OtherExpenses[expenseIndex]
	text := fmt.Sprintf("üóëÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—á–∏–π —Ä–∞—Å—Ö–æ–¥:\n*%s: %.0f ‚ÇΩ*?",
		utils.EscapeTelegramMarkdown(expenseToDelete.Description), expenseToDelete.Amount)

	// –ö–æ–ª–ª–±—ç–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω–¥–µ–∫—Å –∏ –≤–µ—Å—Ç–∏ –Ω–∞ CALLBACK_PREFIX_DRIVER_REPORT_DELETE_OTHER_EXPENSE_CONFIRM
	confirmCallback := fmt.Sprintf("%s_%d", constants.CALLBACK_PREFIX_DRIVER_REPORT_DELETE_OTHER_EXPENSE_CONFIRM, expenseIndex)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", confirmCallback),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –ù–µ—Ç, –Ω–∞–∑–∞–¥", constants.CALLBACK_PREFIX_DRIVER_REPORT_OTHER_EXPENSES_MENU),
		),
	)
	bh.sendOrEditMessageHelper(chatID, messageIDToEdit, text, &keyboard, tgbotapi.ModeMarkdown)
}

// --- –ö–û–ù–ï–¶ –§–ê–ô–õ–ê internal/handlers/menu_handlers_driver_expenses.go ---
