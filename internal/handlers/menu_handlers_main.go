package handlers

import (
	"Original/internal/constants"
	"Original/internal/db"
	"Original/internal/models"
	"Original/internal/utils"
	"fmt"
	"log"

	tgbotapi "github.com/OvyFlash/telegram-bot-api"
)

// SendGatewayMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä: Web App –∏–ª–∏ –±–æ—Ç.
// –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ (–∫–æ–º–∞–Ω–¥–∞ /start).
func (bh *BotHandler) SendGatewayMenu(chatID int64, messageIDToEdit int) {
	log.Printf("BotHandler.SendGatewayMenu –¥–ª—è chatID %d, messageIDToEdit: %d", chatID, messageIDToEdit)

	// !!! –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ 'https://your-web-app.url' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –≤–∞—à–µ–≥–æ Web App
	webAppURL := "https://xn----ctbinlmxece7i.xn--p1ai/webapp/" // –ü—Ä–∏–º–µ—Ä URL

	msgText := "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üöÄ\n\n–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:"

	// --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
	// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä NewInlineKeyboardButtonWebApp, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–≤–º–µ—Å—Ç–∏–º
	// —Å –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.
	// –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É WebAppInfo –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
	webAppButton := tgbotapi.NewInlineKeyboardButtonWebApp(
		"üåê –û—Ç–∫—Ä—ã—Ç—å Web App",
		tgbotapi.WebAppInfo{URL: webAppURL},
	)
	// --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤ –±–æ—Ç–µ
	continueInBotButton := tgbotapi.NewInlineKeyboardButtonData("ü§ñ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ –±–æ—Ç–µ", constants.CALLBACK_CONTINUE_IN_BOT)

	// –°–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			webAppButton,
		),
		tgbotapi.NewInlineKeyboardRow(
			continueInBotButton,
		),
	)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
	_, err := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, "")
	if err != nil {
		log.Printf("SendGatewayMenu: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω—é-—à–ª—é–∑–∞ –¥–ª—è chatID %d: %v", chatID, err)
	}
}

// SendMainMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
func (bh *BotHandler) SendMainMenu(chatID int64, user models.User, messageIDToEdit int) {
	log.Printf("BotHandler.SendMainMenu –¥–ª—è chatID %d, messageIDToEdit: %d, —Ä–æ–ª—å: %s", chatID, messageIDToEdit, user.Role)

	if messageIDToEdit == 0 && user.MainMenuMessageID != 0 {
		messageIDToEdit = user.MainMenuMessageID
	}

	var rows [][]tgbotapi.InlineKeyboardButton
	log.Printf("SendMainMenu: –î–ª—è chatID %d, user.FirstName: '[%s]' (–¥–ª–∏–Ω–∞: %d), user.Role: %s", chatID, user.FirstName, len(user.FirstName), user.Role)
	var greetingName string
	if user.FirstName == "" {
		greetingName = "–¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥"
	} else {
		greetingName = utils.EscapeTelegramMarkdown(user.FirstName)
	}
	log.Printf("SendMainMenu: greetingName –¥–ª—è chatID %d: '[%s]'", chatID, greetingName)
	// –¢–µ–∫—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Ä–æ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
	msgText := fmt.Sprintf("üëã –ü—Ä–∏–≤–µ—Ç, %s! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üöõ\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", greetingName)

	switch user.Role {
	case constants.ROLE_USER:
		msgText = fmt.Sprintf(
			"–ü—Ä–∏–≤–µ—Ç, %s! üëã\n\n"+
				"–•–æ—Ç–∏—Ç–µ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –º—É—Å–æ—Ä–∞ –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –¥–µ–º–æ–Ω—Ç–∞–∂? –í—ã –ø–æ –∞–¥—Ä–µ—Å—É!\n\n"+
				"–Ø ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ ¬´<b>–°–ï–†–í–ò–°-–ö–†–´–ú</b>¬ª. –ü–æ–º–æ–≥—É –≤–∞–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –≤—Å–µ–≥–æ –∑–∞ –ø–∞—Ä—É –º–∏–Ω—É—Ç.\n\n"+
				"–ù–∞—á–Ω–µ–º?\n\n"+
				"üëá <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:</b>",
			utils.EscapeTelegramMarkdown(greetingName),
		)

		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üóëÔ∏è –í—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞", "category_waste"),
			tgbotapi.NewInlineKeyboardButtonData("üõ†Ô∏è –î–µ–º–æ–Ω—Ç–∞–∂", "category_demolition"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üß± –°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã - —Å–∫–æ—Ä–æ + –±–æ–Ω—É—Å! üéÅ", "materials_soon"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "my_orders_page_0"),
			tgbotapi.NewInlineKeyboardButtonData("üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", "invite_friend"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìû –°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", "contact_operator"),
		))

	case constants.ROLE_OPERATOR:
		msgText = fmt.Sprintf("üëã –ü—Ä–∏–≤–µ—Ç, %s! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è! üöõ\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", greetingName)
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üÜï –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", constants.CALLBACK_PREFIX_OP_CREATE_NEW_ORDER),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì¶ –ó–∞–∫–∞–∑—ã", "manage_orders"),
			tgbotapi.NewInlineKeyboardButtonData("üí¨ –°–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏", "client_chats"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üö´ –†–∞–∑/–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏", "block_user_menu"),
		))

	case constants.ROLE_MAINOPERATOR:
		msgText = fmt.Sprintf("üëã –ü—Ä–∏–≤–µ—Ç, %s! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è! üöõ\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", greetingName)
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üÜï –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", constants.CALLBACK_PREFIX_OP_CREATE_NEW_ORDER),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì¶ –ó–∞–∫–∞–∑—ã", "manage_orders"),
			tgbotapi.NewInlineKeyboardButtonData("üí¨ –°–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏", "client_chats"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üö´ –†–∞–∑/–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏", "block_user_menu"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", "staff_menu"),
			tgbotapi.NewInlineKeyboardButtonData("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats_menu"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí∞ Money", constants.CALLBACK_PREFIX_OWNER_CASH_MANAGEMENT_MAIN),
			tgbotapi.NewInlineKeyboardButtonData("üìë –û—Ç–ø—Ä–∞–≤–∏—Ç—å Excel", "send_excel_menu"),
		))

	case constants.ROLE_OWNER:
		msgText = fmt.Sprintf("üëë –í–ª–∞–¥–µ–ª–µ—Ü %s, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è!", greetingName)
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üÜï –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", constants.CALLBACK_PREFIX_OP_CREATE_NEW_ORDER),
			tgbotapi.NewInlineKeyboardButtonData("üì¶ –ó–∞–∫–∞–∑—ã", "manage_orders"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí¨ –°–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏", "client_chats"),
			tgbotapi.NewInlineKeyboardButtonData("üö´ –†–∞–∑/–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏", "block_user_menu"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", "staff_menu"),
			tgbotapi.NewInlineKeyboardButtonData("üí∞ Money", constants.CALLBACK_PREFIX_OWNER_CASH_MANAGEMENT_MAIN),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí∏ –í—ã–ø–ª–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º", constants.CALLBACK_PREFIX_OWNER_STAFF_PAYOUT),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats_menu"),
			tgbotapi.NewInlineKeyboardButtonData("üìë –û—Ç–ø—Ä–∞–≤–∏—Ç—å Excel", "send_excel_menu"),
		))

	case constants.ROLE_DRIVER:
		msgText = fmt.Sprintf("üöö –í–æ–¥–∏—Ç–µ–ª—å %s, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", utils.EscapeTelegramMarkdown(user.FirstName))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "my_orders_page_0"),
			tgbotapi.NewInlineKeyboardButtonData("üÜï –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", constants.CALLBACK_PREFIX_DRIVER_CREATE_ORDER),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí∞ –ú–æ—è –∑–∞—Ä–ø–ª–∞—Ç–∞", constants.CALLBACK_PREFIX_MY_SALARY),
			tgbotapi.NewInlineKeyboardButtonData("üßæ –†–∞—Å—á–µ—Ç –ø–æ –∑–∞–∫–∞–∑–∞–º", constants.CALLBACK_PREFIX_DRIVER_SETTLEMENT),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìû –°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", "contact_operator"),
		))

	case constants.ROLE_LOADER:
		msgText = fmt.Sprintf("üí™ –ì—Ä—É–∑—á–∏–∫ %s, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", utils.EscapeTelegramMarkdown(user.FirstName))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "my_orders_page_0"),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üí∞ –ú–æ—è –∑–∞—Ä–ø–ª–∞—Ç–∞", constants.CALLBACK_PREFIX_MY_SALARY),
		))
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìû –°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", "contact_operator"),
		))

	default:
		log.Printf("SendMainMenu: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å '%s' –¥–ª—è chatID %d", user.Role, chatID)
		rows = append(rows, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìû –°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", "contact_operator"),
		))
		msgText = fmt.Sprintf("üëã –ü—Ä–∏–≤–µ—Ç, %s! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ.", greetingName)
	}
	keyboard := tgbotapi.NewInlineKeyboardMarkup(rows...)

	parseMode := ""
	if user.Role == constants.ROLE_USER {
		parseMode = tgbotapi.ModeHTML
	}

	sentMsg, errSend := bh.sendOrEditMessageHelper(chatID, messageIDToEdit, msgText, &keyboard, parseMode)
	if errSend != nil {
		log.Printf("SendMainMenu: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è chatID %d: %v", chatID, errSend)
		if messageIDToEdit != 0 {
			log.Printf("SendMainMenu: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è chatID %d –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.", chatID)
			sentMsg, errSend = bh.sendOrEditMessageHelper(chatID, 0, msgText, &keyboard, parseMode)
			if errSend != nil {
				log.Printf("SendMainMenu: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è chatID %d: %v", chatID, errSend)
				return
			}
		} else {
			return
		}
	}

	if sentMsg.MessageID != 0 && (user.MainMenuMessageID != sentMsg.MessageID || messageIDToEdit == 0) {
		errDbUpdate := db.UpdateUserMainMenuMessageID(chatID, sentMsg.MessageID)
		if errDbUpdate == nil {
			log.Printf("SendMainMenu: main_menu_message_id %d —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è chatID %d", sentMsg.MessageID, chatID)
		} else {
			log.Printf("SendMainMenu: –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è main_menu_message_id %d –¥–ª—è chatID %d: %v", sentMsg.MessageID, chatID, errDbUpdate)
		}
	}
}
